Exercício: Considere o diagrama UML da classe Carro, crie a estrutura dessa classe e seus métodos get e set (lembre-se de criar um get e um set para cada propriedade da classe)

Comentário sobre os métodos:

ligarCarro( ) - esse método deve informar na tela "Carro ligado"
desligarCarro( ) - esse método deve informar na tela "Carro desligado"
acelerar( ) - esse método deve informar na tela "Acelerando..."
reduzir( ) - esse método deve informar na tela "Reduzindo velocidade!"
pararCarro( ) - esse método deve informar na tela "Carro Parado"
setModelo( ) - esse método deve alterar/setar o modelo do carro.
Construa a classe e instancie um objeto carro e obtenha a seguinte saída (teste no navegador):
BMW X

Carro Ligado

Acelerando…

Velocidade = 80 km/h

Reduzindo velocidade!

Velocidade = 40 km/h

Carro Parado

Velocidade = 0 km/h

Carro Desligado




<?php
class Carro{
  public $modelo;
  public $velocidademax;
  public $velocidadeatual;

public function Carro($m,$velm){
  $this->modelo = $m;
  $this->velolocidademax = $velm;
  echo "{$this->setModelo()} \n";
  $this->ligaCarro();
  $this->acelera();
  $this->reduzir();
  $this->pararCarro();
  $this->desligaCarro();
}
  public function ligaCarro(){
      echo"Carro ligado \n";
  }
  public function desligaCarro(){
    echo "Carro desligado \n ";
  }
  public function acelera(){
    $this->velocidadeatual = $this->velolocidademax;
    echo "Acelerando... \nVelocidade = {$this->velocidadeatual} km/h \n";
  }
  public function setModelo(){
    return $this->modelo;
  }
  public function reduzir(){
    $this->velocidadeatual = $this->velocidadeatual/2;
    echo"Reduzindo velocidade! \nVelocidade = {$this->velocidadeatual} km/h \n";
  }
  public function pararCarro(){
    $this->velocidadeatual = 0;
    echo "Carro parado \nVelocidade = {$this->velocidadeatual} km/h\n";
  }

}
$c1 = new Carro("BMW X",80);
?>
